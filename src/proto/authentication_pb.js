// source: proto/authentication.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.web.authentication.AuthRequest', null, global);
goog.exportSymbol('proto.web.authentication.AuthResponse', null, global);
goog.exportSymbol('proto.web.authentication.Duration', null, global);
goog.exportSymbol('proto.web.authentication.Empty', null, global);
goog.exportSymbol('proto.web.authentication.Platform', null, global);
goog.exportSymbol('proto.web.authentication.PlayerInfo', null, global);
goog.exportSymbol('proto.web.authentication.ProtocolVersionOverride', null, global);
goog.exportSymbol('proto.web.authentication.Reason', null, global);
goog.exportSymbol('proto.web.authentication.TimeTravel', null, global);
goog.exportSymbol('proto.web.authentication.UserBits', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.authentication.PlayerInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.authentication.PlayerInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.authentication.PlayerInfo.displayName = 'proto.web.authentication.PlayerInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.authentication.AuthRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.authentication.AuthRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.authentication.AuthRequest.displayName = 'proto.web.authentication.AuthRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.authentication.Duration = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.authentication.Duration, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.authentication.Duration.displayName = 'proto.web.authentication.Duration';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.authentication.TimeTravel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.authentication.TimeTravel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.authentication.TimeTravel.displayName = 'proto.web.authentication.TimeTravel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.authentication.ProtocolVersionOverride = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.authentication.ProtocolVersionOverride, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.authentication.ProtocolVersionOverride.displayName = 'proto.web.authentication.ProtocolVersionOverride';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.authentication.Empty = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.web.authentication.Empty, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.authentication.Empty.displayName = 'proto.web.authentication.Empty';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.web.authentication.AuthResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.web.authentication.AuthResponse.repeatedFields_, null);
};
goog.inherits(proto.web.authentication.AuthResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.web.authentication.AuthResponse.displayName = 'proto.web.authentication.AuthResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.authentication.PlayerInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.web.authentication.PlayerInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.authentication.PlayerInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.PlayerInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    nucleusid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    personaid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    platformid: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.authentication.PlayerInfo}
 */
proto.web.authentication.PlayerInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.authentication.PlayerInfo;
  return proto.web.authentication.PlayerInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.authentication.PlayerInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.authentication.PlayerInfo}
 */
proto.web.authentication.PlayerInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNucleusid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPersonaid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPlatformid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.authentication.PlayerInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.authentication.PlayerInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.authentication.PlayerInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.PlayerInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNucleusid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getPersonaid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getPlatformid();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional int64 nucleusId = 1;
 * @return {number}
 */
proto.web.authentication.PlayerInfo.prototype.getNucleusid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.authentication.PlayerInfo} returns this
 */
proto.web.authentication.PlayerInfo.prototype.setNucleusid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 personaId = 2;
 * @return {number}
 */
proto.web.authentication.PlayerInfo.prototype.getPersonaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.authentication.PlayerInfo} returns this
 */
proto.web.authentication.PlayerInfo.prototype.setPersonaid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 platformId = 3;
 * @return {number}
 */
proto.web.authentication.PlayerInfo.prototype.getPlatformid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.authentication.PlayerInfo} returns this
 */
proto.web.authentication.PlayerInfo.prototype.setPlatformid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.authentication.AuthRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.web.authentication.AuthRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.authentication.AuthRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.AuthRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    authcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    redirecturi: jspb.Message.getFieldWithDefault(msg, 2, ""),
    product: jspb.Message.getFieldWithDefault(msg, 3, ""),
    firstpartyid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.authentication.AuthRequest}
 */
proto.web.authentication.AuthRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.authentication.AuthRequest;
  return proto.web.authentication.AuthRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.authentication.AuthRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.authentication.AuthRequest}
 */
proto.web.authentication.AuthRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirecturi(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setProduct(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstpartyid(value);
      break;
    case 5:
      var value = /** @type {!proto.web.authentication.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.authentication.AuthRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.authentication.AuthRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.authentication.AuthRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.AuthRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuthcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRedirecturi();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getProduct();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFirstpartyid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPlatform();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional string authCode = 1;
 * @return {string}
 */
proto.web.authentication.AuthRequest.prototype.getAuthcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.authentication.AuthRequest} returns this
 */
proto.web.authentication.AuthRequest.prototype.setAuthcode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string redirectUri = 2;
 * @return {string}
 */
proto.web.authentication.AuthRequest.prototype.getRedirecturi = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.authentication.AuthRequest} returns this
 */
proto.web.authentication.AuthRequest.prototype.setRedirecturi = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string product = 3;
 * @return {string}
 */
proto.web.authentication.AuthRequest.prototype.getProduct = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.authentication.AuthRequest} returns this
 */
proto.web.authentication.AuthRequest.prototype.setProduct = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string firstPartyId = 4;
 * @return {string}
 */
proto.web.authentication.AuthRequest.prototype.getFirstpartyid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.authentication.AuthRequest} returns this
 */
proto.web.authentication.AuthRequest.prototype.setFirstpartyid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Platform platform = 5;
 * @return {!proto.web.authentication.Platform}
 */
proto.web.authentication.AuthRequest.prototype.getPlatform = function() {
  return /** @type {!proto.web.authentication.Platform} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.web.authentication.Platform} value
 * @return {!proto.web.authentication.AuthRequest} returns this
 */
proto.web.authentication.AuthRequest.prototype.setPlatform = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.authentication.Duration.prototype.toObject = function(opt_includeInstance) {
  return proto.web.authentication.Duration.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.authentication.Duration} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.Duration.toObject = function(includeInstance, msg) {
  var f, obj = {
    seconds: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.authentication.Duration}
 */
proto.web.authentication.Duration.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.authentication.Duration;
  return proto.web.authentication.Duration.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.authentication.Duration} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.authentication.Duration}
 */
proto.web.authentication.Duration.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSeconds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.authentication.Duration.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.authentication.Duration.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.authentication.Duration} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.Duration.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeconds();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int64 seconds = 1;
 * @return {number}
 */
proto.web.authentication.Duration.prototype.getSeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.authentication.Duration} returns this
 */
proto.web.authentication.Duration.prototype.setSeconds = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 nanos = 2;
 * @return {number}
 */
proto.web.authentication.Duration.prototype.getNanos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.web.authentication.Duration} returns this
 */
proto.web.authentication.Duration.prototype.setNanos = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.authentication.TimeTravel.prototype.toObject = function(opt_includeInstance) {
  return proto.web.authentication.TimeTravel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.authentication.TimeTravel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.TimeTravel.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: (f = msg.getOffset()) && proto.web.authentication.Duration.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.authentication.TimeTravel}
 */
proto.web.authentication.TimeTravel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.authentication.TimeTravel;
  return proto.web.authentication.TimeTravel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.authentication.TimeTravel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.authentication.TimeTravel}
 */
proto.web.authentication.TimeTravel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.web.authentication.Duration;
      reader.readMessage(value,proto.web.authentication.Duration.deserializeBinaryFromReader);
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.authentication.TimeTravel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.authentication.TimeTravel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.authentication.TimeTravel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.TimeTravel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.web.authentication.Duration.serializeBinaryToWriter
    );
  }
};


/**
 * optional Duration offset = 1;
 * @return {?proto.web.authentication.Duration}
 */
proto.web.authentication.TimeTravel.prototype.getOffset = function() {
  return /** @type{?proto.web.authentication.Duration} */ (
    jspb.Message.getWrapperField(this, proto.web.authentication.Duration, 1));
};


/**
 * @param {?proto.web.authentication.Duration|undefined} value
 * @return {!proto.web.authentication.TimeTravel} returns this
*/
proto.web.authentication.TimeTravel.prototype.setOffset = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.authentication.TimeTravel} returns this
 */
proto.web.authentication.TimeTravel.prototype.clearOffset = function() {
  return this.setOffset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.authentication.TimeTravel.prototype.hasOffset = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.authentication.ProtocolVersionOverride.prototype.toObject = function(opt_includeInstance) {
  return proto.web.authentication.ProtocolVersionOverride.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.authentication.ProtocolVersionOverride} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.ProtocolVersionOverride.toObject = function(includeInstance, msg) {
  var f, obj = {
    original: jspb.Message.getFieldWithDefault(msg, 1, ""),
    overridden: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.authentication.ProtocolVersionOverride}
 */
proto.web.authentication.ProtocolVersionOverride.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.authentication.ProtocolVersionOverride;
  return proto.web.authentication.ProtocolVersionOverride.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.authentication.ProtocolVersionOverride} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.authentication.ProtocolVersionOverride}
 */
proto.web.authentication.ProtocolVersionOverride.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOriginal(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOverridden(value);
      break;
    case 3:
      var value = /** @type {!proto.web.authentication.Reason} */ (reader.readEnum());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.authentication.ProtocolVersionOverride.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.authentication.ProtocolVersionOverride.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.authentication.ProtocolVersionOverride} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.ProtocolVersionOverride.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOriginal();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOverridden();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReason();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string original = 1;
 * @return {string}
 */
proto.web.authentication.ProtocolVersionOverride.prototype.getOriginal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.authentication.ProtocolVersionOverride} returns this
 */
proto.web.authentication.ProtocolVersionOverride.prototype.setOriginal = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string overridden = 2;
 * @return {string}
 */
proto.web.authentication.ProtocolVersionOverride.prototype.getOverridden = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.authentication.ProtocolVersionOverride} returns this
 */
proto.web.authentication.ProtocolVersionOverride.prototype.setOverridden = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Reason reason = 3;
 * @return {!proto.web.authentication.Reason}
 */
proto.web.authentication.ProtocolVersionOverride.prototype.getReason = function() {
  return /** @type {!proto.web.authentication.Reason} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.web.authentication.Reason} value
 * @return {!proto.web.authentication.ProtocolVersionOverride} returns this
 */
proto.web.authentication.ProtocolVersionOverride.prototype.setReason = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.authentication.Empty.prototype.toObject = function(opt_includeInstance) {
  return proto.web.authentication.Empty.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.authentication.Empty} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.Empty.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.authentication.Empty}
 */
proto.web.authentication.Empty.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.authentication.Empty;
  return proto.web.authentication.Empty.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.authentication.Empty} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.authentication.Empty}
 */
proto.web.authentication.Empty.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.authentication.Empty.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.authentication.Empty.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.authentication.Empty} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.Empty.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.web.authentication.AuthResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.web.authentication.AuthResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.web.authentication.AuthResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.web.authentication.AuthResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.AuthResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    player: (f = msg.getPlayer()) && proto.web.authentication.PlayerInfo.toObject(includeInstance, f),
    userbitsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    timetravel: (f = msg.getTimetravel()) && proto.web.authentication.TimeTravel.toObject(includeInstance, f),
    protocolversionoverride: (f = msg.getProtocolversionoverride()) && proto.web.authentication.ProtocolVersionOverride.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.web.authentication.AuthResponse}
 */
proto.web.authentication.AuthResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.web.authentication.AuthResponse;
  return proto.web.authentication.AuthResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.web.authentication.AuthResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.web.authentication.AuthResponse}
 */
proto.web.authentication.AuthResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionid(value);
      break;
    case 3:
      var value = new proto.web.authentication.PlayerInfo;
      reader.readMessage(value,proto.web.authentication.PlayerInfo.deserializeBinaryFromReader);
      msg.setPlayer(value);
      break;
    case 4:
      var value = /** @type {!Array<!proto.web.authentication.UserBits>} */ (reader.readPackedEnum());
      msg.setUserbitsList(value);
      break;
    case 5:
      var value = new proto.web.authentication.TimeTravel;
      reader.readMessage(value,proto.web.authentication.TimeTravel.deserializeBinaryFromReader);
      msg.setTimetravel(value);
      break;
    case 6:
      var value = new proto.web.authentication.ProtocolVersionOverride;
      reader.readMessage(value,proto.web.authentication.ProtocolVersionOverride.deserializeBinaryFromReader);
      msg.setProtocolversionoverride(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.web.authentication.AuthResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.web.authentication.AuthResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.web.authentication.AuthResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.web.authentication.AuthResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlayer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.web.authentication.PlayerInfo.serializeBinaryToWriter
    );
  }
  f = message.getUserbitsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
  f = message.getTimetravel();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.web.authentication.TimeTravel.serializeBinaryToWriter
    );
  }
  f = message.getProtocolversionoverride();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.web.authentication.ProtocolVersionOverride.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sessionId = 1;
 * @return {string}
 */
proto.web.authentication.AuthResponse.prototype.getSessionid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.web.authentication.AuthResponse} returns this
 */
proto.web.authentication.AuthResponse.prototype.setSessionid = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PlayerInfo player = 3;
 * @return {?proto.web.authentication.PlayerInfo}
 */
proto.web.authentication.AuthResponse.prototype.getPlayer = function() {
  return /** @type{?proto.web.authentication.PlayerInfo} */ (
    jspb.Message.getWrapperField(this, proto.web.authentication.PlayerInfo, 3));
};


/**
 * @param {?proto.web.authentication.PlayerInfo|undefined} value
 * @return {!proto.web.authentication.AuthResponse} returns this
*/
proto.web.authentication.AuthResponse.prototype.setPlayer = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.authentication.AuthResponse} returns this
 */
proto.web.authentication.AuthResponse.prototype.clearPlayer = function() {
  return this.setPlayer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.authentication.AuthResponse.prototype.hasPlayer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated UserBits userBits = 4;
 * @return {!Array<!proto.web.authentication.UserBits>}
 */
proto.web.authentication.AuthResponse.prototype.getUserbitsList = function() {
  return /** @type {!Array<!proto.web.authentication.UserBits>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.web.authentication.UserBits>} value
 * @return {!proto.web.authentication.AuthResponse} returns this
 */
proto.web.authentication.AuthResponse.prototype.setUserbitsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.web.authentication.UserBits} value
 * @param {number=} opt_index
 * @return {!proto.web.authentication.AuthResponse} returns this
 */
proto.web.authentication.AuthResponse.prototype.addUserbits = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.web.authentication.AuthResponse} returns this
 */
proto.web.authentication.AuthResponse.prototype.clearUserbitsList = function() {
  return this.setUserbitsList([]);
};


/**
 * optional TimeTravel timeTravel = 5;
 * @return {?proto.web.authentication.TimeTravel}
 */
proto.web.authentication.AuthResponse.prototype.getTimetravel = function() {
  return /** @type{?proto.web.authentication.TimeTravel} */ (
    jspb.Message.getWrapperField(this, proto.web.authentication.TimeTravel, 5));
};


/**
 * @param {?proto.web.authentication.TimeTravel|undefined} value
 * @return {!proto.web.authentication.AuthResponse} returns this
*/
proto.web.authentication.AuthResponse.prototype.setTimetravel = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.authentication.AuthResponse} returns this
 */
proto.web.authentication.AuthResponse.prototype.clearTimetravel = function() {
  return this.setTimetravel(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.authentication.AuthResponse.prototype.hasTimetravel = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ProtocolVersionOverride protocolVersionOverride = 6;
 * @return {?proto.web.authentication.ProtocolVersionOverride}
 */
proto.web.authentication.AuthResponse.prototype.getProtocolversionoverride = function() {
  return /** @type{?proto.web.authentication.ProtocolVersionOverride} */ (
    jspb.Message.getWrapperField(this, proto.web.authentication.ProtocolVersionOverride, 6));
};


/**
 * @param {?proto.web.authentication.ProtocolVersionOverride|undefined} value
 * @return {!proto.web.authentication.AuthResponse} returns this
*/
proto.web.authentication.AuthResponse.prototype.setProtocolversionoverride = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.web.authentication.AuthResponse} returns this
 */
proto.web.authentication.AuthResponse.prototype.clearProtocolversionoverride = function() {
  return this.setProtocolversionoverride(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.web.authentication.AuthResponse.prototype.hasProtocolversionoverride = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * @enum {number}
 */
proto.web.authentication.Platform = {
  UNKNOWN: 0,
  PC: 1,
  PS4: 2,
  XBOXONE: 3,
  PS5: 4,
  XBSX: 5,
  COMMON: 6
};

/**
 * @enum {number}
 */
proto.web.authentication.Reason = {
  NONE: 0,
  PLAYER: 1,
  SYNC: 2
};

/**
 * @enum {number}
 */
proto.web.authentication.UserBits = {
  USER_BIT_UNSPECIFIED: 0,
  USER_BIT_ACCEPTED_TOS: 1,
  USER_BIT_ENABLE_USERSHARING: 2,
  USER_BIT_ENABLE_CRASHREPORTS: 3,
  USER_BIT_COMPLETED_TUTORIAL: 4,
  USER_BIT_CLIENT_ENABLE_USAGESHARING: 5
};

goog.object.extend(exports, proto.web.authentication);
